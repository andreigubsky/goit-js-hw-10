{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from \"flatpickr\";\n// Додатковий імпорт стилів\nimport \"flatpickr/dist/flatpickr.min.css\";\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\nconst button = document.querySelector(\"[data-start]\");\nconst daysCounter = document.querySelector(\"[data-days]\");\nconst hoursCounter = document.querySelector(\"[data-hours]\");\nconst minutesCounter = document.querySelector(\"[data-minutes]\");\nconst secondsCounter = document.querySelector(\"[data-seconds]\");\nlet timerId = null;\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const currentTime = new Date().getTime();\n    const timeInter = selectedDates[0].getTime() - currentTime;\n    checkDate(timeInter);\n  },\n};\nconst fp = flatpickr(\"#datetime-picker\", options);\n\n// Натисканням на кнопку «Start» починається зворотний \n// відлік часу до обраної дати з моменту натискання.\n\nbutton.addEventListener(\"click\", () => { timer(fp.latestSelectedDateObj.getTime()) });\n\nfunction timer(endTime) {\n  timerId = setInterval(() => {\n\n    const currentTime = new Date().getTime();\n    const timeInterval = endTime - currentTime;\n    if (timeInterval > 0) {\n\n      // Після запуску таймера натисканням кнопки Старт кнопка Старт \n      // і інпут стають неактивним, щоб користувач не міг обрати нову дату, \n      // поки йде відлік часу.\n      button.disabled = true;\n      fp.input.disabled = true;\n      fp.destroy();\n\n      daysCounter.textContent = addLeadingZero(String(convertMs(timeInterval).days));\n      hoursCounter.textContent = addLeadingZero(String(convertMs(timeInterval).hours));\n      minutesCounter.textContent = addLeadingZero(String(convertMs(timeInterval).minutes));\n      secondsCounter.textContent = addLeadingZero(String(convertMs(timeInterval).seconds));\n    }\n    else {\n      clearTimeout(timerId);\n\n      //  Після зупинки таймера інпут стає активним, \n      // щоб користувач міг обрати наступну дату. Кнопка залишається не активною.\n\n      button.disabled = false;\n      fp.input.disabled = false;\n      flatpickr(\"#datetime-picker\", options);\n    }\n\n  }, 1000);\n\n}\n\n// Якщо користувач вибрав валідну дату (в майбутньому), кнопка «Start» стає активною.\n\n// Кнопка «Start» повинна бути неактивною доти, \n// доки користувач не вибрав дату в майбутньому. \n\n//   Якщо користувач вибрав дату в минулому, покажи window.alert() \n// з текстом \"Please choose a date in the future\" і зроби кнопку «Start» не активною.\n\n// Зверни увагу, що при обранні валідної дати, \n// не запуску таймера і обранні потім невалідної дати, \n// кнопка після розблокування має знову стати неактивною.\n\nfunction checkDate(distance) {\n\n  if (distance > 0) {\n    document.querySelector('[data-start]').disabled = false;\n    return;\n  }\n  iziToast.show({\n    message: 'Please choose a date in the future',\n    messageColor: '#000000',\n    backgroundColor: '#ff8080',\n    timeout: 3000,\n    position: 'topRight',\n  });\n  document.querySelector('[data-start]').disabled = true;\n  return;\n\n}\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.padStart(2, \"0\");\n}"],"names":["button","daysCounter","hoursCounter","minutesCounter","secondsCounter","timerId","options","selectedDates","currentTime","timeInter","checkDate","fp","flatpickr","timer","endTime","timeInterval","addLeadingZero","convertMs","distance","iziToast","ms","days","hours","minutes","seconds","value"],"mappings":"+IAWA,MAAMA,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAc,SAAS,cAAc,aAAa,EAClDC,EAAe,SAAS,cAAc,cAAc,EACpDC,EAAiB,SAAS,cAAc,gBAAgB,EACxDC,EAAiB,SAAS,cAAc,gBAAgB,EAC9D,IAAIC,EAAU,KACd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCC,EAAYF,EAAc,CAAC,EAAE,QAAO,EAAKC,EAC/CE,EAAUD,CAAS,CACpB,CACH,EACME,EAAKC,EAAU,mBAAoBN,CAAO,EAKhDN,EAAO,iBAAiB,QAAS,IAAM,CAAEa,EAAMF,EAAG,sBAAsB,SAAS,CAAC,CAAE,EAEpF,SAASE,EAAMC,EAAS,CACtBT,EAAU,YAAY,IAAM,CAE1B,MAAMG,EAAc,IAAI,KAAM,EAAC,QAAO,EAChCO,EAAeD,EAAUN,EAC3BO,EAAe,GAKjBf,EAAO,SAAW,GAClBW,EAAG,MAAM,SAAW,GACpBA,EAAG,QAAO,EAEVV,EAAY,YAAce,EAAe,OAAOC,EAAUF,CAAY,EAAE,IAAI,CAAC,EAC7Eb,EAAa,YAAcc,EAAe,OAAOC,EAAUF,CAAY,EAAE,KAAK,CAAC,EAC/EZ,EAAe,YAAca,EAAe,OAAOC,EAAUF,CAAY,EAAE,OAAO,CAAC,EACnFX,EAAe,YAAcY,EAAe,OAAOC,EAAUF,CAAY,EAAE,OAAO,CAAC,IAGnF,aAAaV,CAAO,EAKpBL,EAAO,SAAW,GAClBW,EAAG,MAAM,SAAW,GACpBC,EAAU,mBAAoBN,CAAO,EAGxC,EAAE,GAAI,CAET,CAcA,SAASI,EAAUQ,EAAU,CAE3B,GAAIA,EAAW,EAAG,CAChB,SAAS,cAAc,cAAc,EAAE,SAAW,GAClD,MACD,CACDC,EAAS,KAAK,CACZ,QAAS,qCACT,aAAc,UACd,gBAAiB,UACjB,QAAS,IACT,SAAU,UACd,CAAG,EACD,SAAS,cAAc,cAAc,EAAE,SAAW,EAGpD,CAGA,SAASF,EAAUG,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASR,EAAeS,EAAO,CAC7B,OAAOA,EAAM,SAAS,EAAG,GAAG,CAC9B"}