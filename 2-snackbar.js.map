{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst delayObj = document.querySelector(\"input[name='delay']\");\nconst radioButtons = document.querySelectorAll(\"input[type='radio']\");\nconst button = document.querySelector('button');\n\nfunction getSelectedRadioValue() {\n    let selectedValue = '';\n\n    for (let i = 0; i < radioButtons.length; i++) {\n        if (radioButtons[i].checked) {\n            selectedValue = radioButtons[i].value;\n            break;\n        }\n    }\n    return selectedValue;\n}\nfunction unSelectRadios() {\n    radioButtons.forEach(radio => {\n        radio.checked = false;\n    });\n}\n\nfunction showRejected(delay) {\n    iziToast.show({\n        message: `❌ Rejected promise in ${delay}ms`,\n        messageColor: '#ffffff',\n        backgroundColor: '#fe5549',\n        progressBar: false,\n        timeout: 5000,\n        position: 'topRight',\n    });\n}\nfunction showFulfilled(delay) {\n    iziToast.show({\n        message: `✅ Fulfilled promise in ${delay}ms`,\n        messageColor: '#ffffff',\n        backgroundColor: '#31c581',\n        progressBar: false,\n        timeout: 5000,\n        position: 'topRight',\n    });\n}\n\nconst makePromise = ({ delay, shouldResolve = true }) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve(delay)\n            } else {\n                reject(delay)\n            }\n        }, delay);\n    });\n};\n\n\nbutton.addEventListener('click', event => {\n    event.preventDefault();\n\n    const choosedOption = getSelectedRadioValue();\n    const delay = delayObj.value;\n\n    if (delay > 0 && choosedOption === \"fulfilled\") {\n        makePromise({ delay: delay })\n            .then(delay => showFulfilled(delay))\n            .catch(error => console.log(error));\n    }\n    if (delay > 0 && choosedOption === \"rejected\") {\n        makePromise({ value: choosedOption, delay: delay })\n            .then(delay => showRejected(delay))\n            .catch(error => console.log(error));\n    }\n    delayObj.value = '';\n    unSelectRadios('state');\n\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["delayObj","radioButtons","button","getSelectedRadioValue","selectedValue","i","unSelectRadios","radio","showRejected","delay","iziToast","showFulfilled","makePromise","shouldResolve","resolve","reject","event","choosedOption","error"],"mappings":"wIAMA,MAAMA,EAAW,SAAS,cAAc,qBAAqB,EACvDC,EAAe,SAAS,iBAAiB,qBAAqB,EAC9DC,EAAS,SAAS,cAAc,QAAQ,EAE9C,SAASC,GAAwB,CAC7B,IAAIC,EAAgB,GAEpB,QAASC,EAAI,EAAGA,EAAIJ,EAAa,OAAQI,IACrC,GAAIJ,EAAaI,CAAC,EAAE,QAAS,CACzBD,EAAgBH,EAAaI,CAAC,EAAE,MAChC,KACH,CAEL,OAAOD,CACX,CACA,SAASE,GAAiB,CACtBL,EAAa,QAAQM,GAAS,CAC1BA,EAAM,QAAU,EACxB,CAAK,CACL,CAEA,SAASC,EAAaC,EAAO,CACzBC,EAAS,KAAK,CACV,QAAS,yBAAyBD,CAAK,KACvC,aAAc,UACd,gBAAiB,UACjB,YAAa,GACb,QAAS,IACT,SAAU,UAClB,CAAK,CACL,CACA,SAASE,EAAcF,EAAO,CAC1BC,EAAS,KAAK,CACV,QAAS,0BAA0BD,CAAK,KACxC,aAAc,UACd,gBAAiB,UACjB,YAAa,GACb,QAAS,IACT,SAAU,UAClB,CAAK,CACL,CAEA,MAAMG,EAAc,CAAC,CAAE,MAAAH,EAAO,cAAAI,EAAgB,EAAI,IACvC,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,WAAW,IAAM,CACTF,EACAC,EAAQL,CAAK,EAEbM,EAAON,CAAK,CAEnB,EAAEA,CAAK,CAChB,CAAK,EAILP,EAAO,iBAAiB,QAASc,GAAS,CACtCA,EAAM,eAAc,EAEpB,MAAMC,EAAgBd,IAChBM,EAAQT,EAAS,MAEnBS,EAAQ,GAAKQ,IAAkB,aAC/BL,EAAY,CAAE,MAAOH,EAAO,EACvB,KAAKA,GAASE,EAAcF,CAAK,CAAC,EAClC,MAAMS,GAAS,QAAQ,IAAIA,CAAK,CAAC,EAEtCT,EAAQ,GAAKQ,IAAkB,YAC/BL,EAAY,CAAE,MAAOK,EAAe,MAAOR,CAAK,CAAE,EAC7C,KAAKA,GAASD,EAAaC,CAAK,CAAC,EACjC,MAAMS,GAAS,QAAQ,IAAIA,CAAK,CAAC,EAE1ClB,EAAS,MAAQ,GACjBM,EAAsB,CAE1B,CAAC"}