{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst delayObj = document.querySelector(\"input[name='delay']\");\nconst radioButtons = document.querySelectorAll(\"input[type='radio']\");\nconst button = document.querySelector('button');\n\nfunction getSelectedRadioValue() {\n    let selectedValue = '';\n\n    for (let i = 0; i < radioButtons.length; i++) {\n        if (radioButtons[i].checked) {\n            selectedValue = radioButtons[i].value;\n            break;\n        }\n    }\n    return selectedValue;\n}\nfunction unSelectRadios() {\n    radioButtons.forEach(radio => {\n        radio.checked = false;\n    });\n}\n\nfunction showRejected(delay) {\n    iziToast.show({\n        message: `❌ Rejected promise in ${delay}ms`,\n        messageColor: '#ffffff',\n        backgroundColor: '#fe5549',\n        progressBar: false,\n        timeout: 5000,\n        position: 'topRight',\n    });\n}\nfunction showFulfilled(delay) {\n    iziToast.show({\n        message: `✅ Fulfilled promise in ${delay}ms`,\n        messageColor: '#ffffff',\n        backgroundColor: '#31c581',\n        progressBar: false,\n        timeout: 5000,\n        position: 'topRight',\n    });\n}\n\nconst makePromise = ({ delay, shouldResolve = false }) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (!delay || shouldResolve) {\n                reject(error)\n            } else {\n                resolve(delay =>  showFulfilled(delay))\n            }\n        }, delay);\n    });\n};\n\nconst { promise, resolve, reject } = Promise.withResolvers();\n\n\n\nbutton.addEventListener('click', event => {\n    event.preventDefault();\n\n    const choosedOption = getSelectedRadioValue();\n    const delay = delayObj.value;\n\n\n    makePromise({ delay: delay }).then(makePromise({ delay: delay })).then(makePromise({ delay: delay })).catch(error => console.log(error));\n\n\n\n\n    // if (choosedOption === \"fulfilled\") {\n    //     makePromise({ delay: delay })\n    //         .then(delay => showFulfilled(delay))\n    //         .catch(error => console.log(error));\n    // }\n    // if (choosedOption === \"rejected\") {\n    //     makePromise({ value: choosedOption, delay: delay })\n    //         .then(delay => showRejected(delay))\n    //         .catch(error => console.log(error));\n    // }\n    delayObj.value = '';\n    unSelectRadios('state');\n\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["delayObj","radioButtons","button","getSelectedRadioValue","selectedValue","i","unSelectRadios","radio","showFulfilled","delay","iziToast","makePromise","shouldResolve","resolve","reject","event","error"],"mappings":"wIAMA,MAAMA,EAAW,SAAS,cAAc,qBAAqB,EACvDC,EAAe,SAAS,iBAAiB,qBAAqB,EAC9DC,EAAS,SAAS,cAAc,QAAQ,EAE9C,SAASC,GAAwB,CAC7B,IAAIC,EAAgB,GAEpB,QAASC,EAAI,EAAGA,EAAIJ,EAAa,OAAQI,IACrC,GAAIJ,EAAaI,CAAC,EAAE,QAAS,CACzBD,EAAgBH,EAAaI,CAAC,EAAE,MAChC,KACH,CAEL,OAAOD,CACX,CACA,SAASE,GAAiB,CACtBL,EAAa,QAAQM,GAAS,CAC1BA,EAAM,QAAU,EACxB,CAAK,CACL,CAYA,SAASC,EAAcC,EAAO,CAC1BC,EAAS,KAAK,CACV,QAAS,0BAA0BD,CAAK,KACxC,aAAc,UACd,gBAAiB,UACjB,YAAa,GACb,QAAS,IACT,SAAU,UAClB,CAAK,CACL,CAEA,MAAME,EAAc,CAAC,CAAE,MAAAF,EAAO,cAAAG,EAAgB,EAAK,IACxC,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,WAAW,IAAM,CACT,CAACL,GAASG,EACVE,EAAO,KAAK,EAEZD,EAAQJ,GAAUD,EAAcC,CAAK,CAAC,CAE7C,EAAEA,CAAK,CAChB,CAAK,EAGgC,QAAQ,cAAgB,EAI7DP,EAAO,iBAAiB,QAASa,GAAS,CACtCA,EAAM,eAAc,EAEEZ,EAAwB,EAC9C,MAAMM,EAAQT,EAAS,MAGvBW,EAAY,CAAE,MAAOF,CAAK,CAAE,EAAE,KAAKE,EAAY,CAAE,MAAOF,CAAO,CAAA,CAAC,EAAE,KAAKE,EAAY,CAAE,MAAOF,CAAO,CAAA,CAAC,EAAE,MAAMO,GAAS,QAAQ,IAAIA,CAAK,CAAC,EAevIhB,EAAS,MAAQ,GACjBM,EAAsB,CAE1B,CAAC"}