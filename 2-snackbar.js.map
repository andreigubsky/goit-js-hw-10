{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst delayObj = document.querySelector(\"input[name='delay']\");\nconst radioButtons = document.querySelectorAll(\"input[type='radio']\");\nconst button = document.querySelector('button');\n\nfunction getSelectedRadioValue() {\n    let selectedValue = '';\n\n    for (let i = 0; i < radioButtons.length; i++) {\n        if (radioButtons[i].checked) {\n            selectedValue = radioButtons[i].value;\n            break;\n        }\n    }\n    return selectedValue;\n}\n\nfunction unSelectRadios() {\n    radioButtons.forEach(radio => {\n        radio.checked = false;\n    });\n}\n\nfunction showRejected(delay) {\n    iziToast.show({\n        message: `❌ Rejected promise in ${delay}ms`,\n        messageColor: '#ffffff',\n        backgroundColor: '#fe5549',\n        progressBar: false,\n        timeout: 5000,\n        position: 'topRight',\n    });\n}\n\nfunction showFulfilled(delay) {\n    iziToast.show({\n        message: `✅ Fulfilled promise in ${delay}ms`,\n        messageColor: '#ffffff',\n        backgroundColor: '#31c581',\n        progressBar: false,\n        timeout: 5000,\n        position: 'topRight',\n    });\n}\n\nconst makePromise = ({ value, delay, shouldResolve }) => {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (shouldResolve) {\n                resolve(showFulfilled(value))\n            } else {\n                reject(showRejected(value))\n            }\n        }, delay);\n    });\n};\n\nbutton.addEventListener('click', event => {\n    event.preventDefault();\n    const choosedOption = getSelectedRadioValue();\n    const delay = delayObj.value;\n    let radio;\n\n    if (choosedOption === \"fulfilled\") {\n        radio = true;\n    }\n    if (choosedOption === \"rejected\") {\n        radio = false;\n    }\n\n    makePromise({ value: delay, delay: delay, shouldResolve: radio })\n        .catch(error => console.log(error));\n\n    delayObj.value = '';\n    unSelectRadios('state');\n\n});"],"names":["delayObj","radioButtons","button","getSelectedRadioValue","selectedValue","i","unSelectRadios","radio","showRejected","delay","iziToast","showFulfilled","makePromise","value","shouldResolve","resolve","reject","event","choosedOption","error"],"mappings":"wIAMA,MAAMA,EAAW,SAAS,cAAc,qBAAqB,EACvDC,EAAe,SAAS,iBAAiB,qBAAqB,EAC9DC,EAAS,SAAS,cAAc,QAAQ,EAE9C,SAASC,GAAwB,CAC7B,IAAIC,EAAgB,GAEpB,QAASC,EAAI,EAAGA,EAAIJ,EAAa,OAAQI,IACrC,GAAIJ,EAAaI,CAAC,EAAE,QAAS,CACzBD,EAAgBH,EAAaI,CAAC,EAAE,MAChC,KACH,CAEL,OAAOD,CACX,CAEA,SAASE,GAAiB,CACtBL,EAAa,QAAQM,GAAS,CAC1BA,EAAM,QAAU,EACxB,CAAK,CACL,CAEA,SAASC,EAAaC,EAAO,CACzBC,EAAS,KAAK,CACV,QAAS,yBAAyBD,CAAK,KACvC,aAAc,UACd,gBAAiB,UACjB,YAAa,GACb,QAAS,IACT,SAAU,UAClB,CAAK,CACL,CAEA,SAASE,EAAcF,EAAO,CAC1BC,EAAS,KAAK,CACV,QAAS,0BAA0BD,CAAK,KACxC,aAAc,UACd,gBAAiB,UACjB,YAAa,GACb,QAAS,IACT,SAAU,UAClB,CAAK,CACL,CAEA,MAAMG,EAAc,CAAC,CAAE,MAAAC,EAAO,MAAAJ,EAAO,cAAAK,CAAa,IACvC,IAAI,QAAQ,CAACC,EAASC,IAAW,CACpC,WAAW,IAAM,CACTF,EACAC,EAAQJ,EAAcE,CAAK,CAAC,EAE5BG,EAAOR,EAAaK,CAAK,CAAC,CAEjC,EAAEJ,CAAK,CAChB,CAAK,EAGLP,EAAO,iBAAiB,QAASe,GAAS,CACtCA,EAAM,eAAc,EACpB,MAAMC,EAAgBf,IAChBM,EAAQT,EAAS,MACvB,IAAIO,EAEAW,IAAkB,cAClBX,EAAQ,IAERW,IAAkB,aAClBX,EAAQ,IAGZK,EAAY,CAAE,MAAOH,EAAO,MAAOA,EAAO,cAAeF,EAAO,EAC3D,MAAMY,GAAS,QAAQ,IAAIA,CAAK,CAAC,EAEtCnB,EAAS,MAAQ,GACjBM,EAAsB,CAE1B,CAAC"}